<Page x:Class="Worked_Timer.Pages.SetersPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
      xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
      xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
      xmlns:local="clr-namespace:Worked_Timer.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="330" d:DesignWidth="360"
      Title="SetersPage"
      x:Name="myWindow">
    <Page.Resources>
       
       

        <!--<Animation>-->
        
        <!--ScrollTimeWork-->
        <Storyboard x:Key="TimeWorkOpen">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TimeWorkMain" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="120"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TimeWorkMain">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ImageRotateTimeBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="-180" To="0" Duration="0:0:0.4"/>
        </Storyboard>
        <Storyboard x:Key="TimeWorkClose">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TimeWorkMain" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="120"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TimeWorkMain">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ImageRotateTimeBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="-180" Duration="0:0:0.4"/>
        </Storyboard>

        <!--ScrollTimeBreak-->
        <Storyboard x:Key="TimeBreakOpen">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TimeBreakMain" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="120"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TimeBreakMain">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ImageRotateTimeBreakBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="-180" To="0" Duration="0:0:0.4"/>
        </Storyboard>
        <Storyboard x:Key="TimeBreakClose">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="TimeBreakMain" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="120"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="TimeBreakMain">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ImageRotateTimeBreakBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="-180" Duration="0:0:0.4"/>
        </Storyboard>
        
        <!--ScrollCycle-->
        <Storyboard x:Key="CycleOpen">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CycleMain" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="120"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CycleMain">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ImageRotateCycleBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="-180" To="0" Duration="0:0:0.4"/>
        </Storyboard>
        <Storyboard x:Key="CycleClose">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="CycleMain" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="120"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CycleMain">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ImageRotateCycleBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="-180" Duration="0:0:0.4"/>
        </Storyboard>

        <!--ScrollLunch-->
        <Storyboard x:Key="LucnhOpen1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LunchMain" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="200"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LunchMain">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ImageRotateLunchBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="-180" To="0" Duration="0:0:0.4"/>
        </Storyboard>
        <Storyboard x:Key="LunchClose1">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LunchMain" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="200"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LunchMain">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ImageRotateLunchBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="-180" Duration="0:0:0.4"/>
        </Storyboard>

        <!--ScrollLunch-->
        <Storyboard x:Key="LucnhOpen2">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LunchMain" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="260"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LunchMain">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ImageRotateLunchBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="-180" To="0" Duration="0:0:0.4"/>
        </Storyboard>
        <Storyboard x:Key="LunchClose2">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LunchMain" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="260"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LunchMain">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="ImageRotateLunchBorder" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="-180" Duration="0:0:0.4"/>
        </Storyboard>

        <!--LunchDrop-->
        <Storyboard x:Key="ShowLunchDrop">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LunchDrop_Border" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="70"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LunchMain" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="200"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="260"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LunchDrop_Border">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HideLunchDrop">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LunchDrop_Border" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="70"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LunchMain" Storyboard.TargetProperty="Height">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="260"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="200"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LunchDrop_Border">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.4000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        
       

        <!--VisibilityButtonStartAndLunch-->
        <Storyboard x:Key="StartAndLunchVisible">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="WarningText" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="WarningText">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LunchContainer" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.8000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LunchContainer">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StartContainer" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.8000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="StartContainer">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.3000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="StartAndLunchHide">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="WarningText" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.8000000" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="WarningText">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LunchContainer" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="LunchContainer">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="StartContainer" Storyboard.TargetProperty="Opacity">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="StartContainer">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.5000000" Value="{x:Static Visibility.Collapsed}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
       <!--</Animation>-->
      

        <BooleanToVisibilityConverter x:Key="BoolToVis" />

        <Style x:Key="Win11ScrollBarStyle" TargetType="{x:Type ScrollBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Border CornerRadius="4" Background="#33000000" Width="8" Margin="2">
                            <Track Name="PART_Track" IsDirectionReversed="true">
                                <Track.Thumb>
                                    <Thumb>
                                        <Thumb.Template>
                                            <ControlTemplate>
                                                <Border Background="{Binding Property.CurentBackGround.Accent.Accent}" BorderBrush="{Binding Property.CurentBackGround.Accent.Accent}" CornerRadius="4"/>
                                            </ControlTemplate>
                                        </Thumb.Template>
                                    </Thumb>
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Визначення Win11ScrollShadowEffect -->
        <DropShadowEffect x:Key="Win11ScrollShadowEffect" Color="Gray" Direction="315" ShadowDepth="2" Opacity="0.5"/>



        <Style x:Key="Win11ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Column="0" Grid.Row="0" CanContentScroll="{TemplateBinding CanContentScroll}" />

                            <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="1" Width="8" Margin="2,0,2,0"
                               IsTabStop="False" Orientation="Vertical" 
                               Style="{DynamicResource Win11ScrollBarStyle}" 
                               Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                               Value="{TemplateBinding VerticalOffset}" 
                               Maximum="{TemplateBinding ScrollableHeight}" 
                               ViewportSize="{TemplateBinding ViewportHeight}" />

                            <ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="1" Height="8" Margin="0,2,0,2"
                               IsTabStop="False" Orientation="Horizontal" 
                               Style="{DynamicResource Win11ScrollBarStyle}" 
                               Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                               Value="{TemplateBinding HorizontalOffset}" 
                               Maximum="{TemplateBinding ScrollableWidth}"
                               ViewportSize="{TemplateBinding ViewportWidth}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="BorderHover" TargetType="Border">
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{Binding Property.CurentBackGround.Main.Enter}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style x:Key="BorderHoverAccent" TargetType="Border">
            <Setter Property="Background" Value="{Binding Property.CurentBackGround.Accent.Accent}"/>
     
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{Binding Property.CurentBackGround.Accent.Enter}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Border Style="{StaticResource BorderHover}" Grid.Column="1"  Margin="0,20,20,10" Padding="5" CornerRadius="5" VerticalAlignment="Top" HorizontalAlignment="Right" Cursor="Hand">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding Window.ChangePageCommand}" CommandParameter="Default" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <StackPanel  Orientation="Horizontal">
                    <svgc:SvgViewbox Source="{Binding Property.CurentImageSourse.Sourse[Home]}" Width="18" Margin="5,0,0,0"/>
                    <TextBlock  Text="{Binding Property.CurentLanguage.Strings[OtherBack]}" Foreground="{Binding Property.CurentBackGround.Main.Font}" VerticalAlignment="Center" Margin="5,0"/>
                </StackPanel>
            </Border>
        </Grid>
        
        <ScrollViewer Grid.Row="1" Style="{StaticResource Win11ScrollViewerStyle}">
            <StackPanel>

                <i:Interaction.Triggers>
                    <ei:DataTrigger Binding="{Binding Animation.SeterTimeWork}" Value="1">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource TimeWorkClose}"/>
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding Animation.SeterTimeWork}" Value="2">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource TimeWorkOpen}"/>
                    </ei:DataTrigger>

                    <ei:DataTrigger Binding="{Binding Animation.SeterTimeBreak}" Value="1">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource TimeBreakClose}"/>
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding Animation.SeterTimeBreak}" Value="2">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource TimeBreakOpen}"/>
                    </ei:DataTrigger>

                    <ei:DataTrigger Binding="{Binding Animation.SeterCycle}" Value="1">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource CycleClose}"/>
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding Animation.SeterCycle}" Value="2">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource CycleOpen}"/>
                    </ei:DataTrigger>

                    <ei:DataTrigger Binding="{Binding Animation.SeterLunch}" Value="1">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource LunchClose1}"/>
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding Animation.SeterLunch}" Value="2">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource LucnhOpen1}"/>
                    </ei:DataTrigger>
                    
                    <ei:DataTrigger Binding="{Binding Animation.SeterLunch}" Value="3">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource LunchClose2}"/>
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding Animation.SeterLunch}" Value="4">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource LucnhOpen2}"/>
                    </ei:DataTrigger>
                    
                    

                    <ei:DataTrigger Binding="{Binding Animation.SeterLunchDrop}" Value="2">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource ShowLunchDrop}"/>
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding Animation.SeterLunchDrop}" Value="1">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource HideLunchDrop}"/>
                    </ei:DataTrigger>

                    <ei:DataTrigger Binding="{Binding Animation.SetterIsFilledMainFields}" Value="True">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource StartAndLunchVisible}"/>
                    </ei:DataTrigger>
                    <ei:DataTrigger Binding="{Binding Animation.SetterIsFilledMainFields}" Value="False">
                        <ei:ControlStoryboardAction Storyboard="{StaticResource StartAndLunchHide}"/>
                    </ei:DataTrigger>
                </i:Interaction.Triggers>

               

                <!--TimeWork-->
                <StackPanel Margin="20,5">
                    <StackPanel.Effect>
                        <DropShadowEffect Color="{Binding Property.CurentBackGround.Main.Shadow}" Direction="315" Opacity="0.2" BlurRadius="15"/>
                    </StackPanel.Effect>
                    <!--Label-->
                    <Border x:Name="TimeWorkLabel" Background="{Binding Property.CurentBackGround.Main.Section}" CornerRadius="5,5,0,0" Cursor="Hand" Padding="10">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding Animation.ShowSetersCommand}" CommandParameter="Work"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="{Binding Property.CurentLanguage.Strings[SetterWork]}" Foreground="{Binding Property.CurentBackGround.Main.Font}" Grid.Column="0" Margin="5,0,0,0" FontSize="18"  HorizontalAlignment="Left"/>
                            <Border x:Name="ImageRotateTimeBorder" Grid.Column="1"  Margin="0,0,15,0" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Border.RenderTransform>

                                <svgc:SvgViewbox  Source="{Binding Property.CurentImageSourse.Sourse[Arrow]}" Width="20"/>
                                
                            </Border>
                        </Grid>
                    </Border>
                    <!--Input-->
                    <Border x:Name="TimeWorkMain" Background="{Binding Property.CurentBackGround.Main.Section}"  Height="120" Visibility="Visible" BorderBrush="{Binding Property.CurentBackGround.Accent.Accent}" BorderThickness="0,1,0,0" CornerRadius="0,0,5,5">
                        <Grid  Margin="10,5,5,5"  RenderTransformOrigin="0.5,0.5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0" >
                                <TextBlock Text="{Binding Property.CurentLanguage.Strings[SetterWorkInfo]}" Foreground="{Binding Property.CurentBackGround.Main.Font}" />
                                <TextBlock Text="{Binding Timer.TimeWorkInMinuteExeption}" Visibility="{Binding Timer.TimeWorkInMinuteVisibility, Converter={StaticResource BoolToVis}}" Foreground="Red" FontSize="10"/>
                                <TextBox Text="{Binding Timer.TimeWorkInMinute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding Property.CurentBackGround.Main.Font}" FontSize="16" Width="80" HorizontalAlignment="Left">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border Background="{TemplateBinding Background}" BorderBrush="{Binding Property.CurentBackGround.Accent.Accent}" BorderThickness="2" CornerRadius="5">
                                                <ScrollViewer x:Name="PART_ContentHost" />
                                            </Border>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                    <TextBox.Background>
                                        <SolidColorBrush Color="{Binding Property.CurentBackGround.Section}"/>
                                    </TextBox.Background>
                                </TextBox>
                            </StackPanel>

                            <svgc:SvgViewbox Grid.Row="1"  Source="{Binding Property.CurentImageSourse.Sourse[Work]}" Width="30" HorizontalAlignment="Right" Margin="10"  />
                        </Grid>
                       
                    </Border>
                </StackPanel>

                <!--TimeBreak-->
                <StackPanel Margin="20,5">
                    <StackPanel.Effect>
                        <DropShadowEffect Color="{Binding Property.CurentBackGround.Main.Shadow}" Direction="315" Opacity="0.2" BlurRadius="15" />
                    </StackPanel.Effect>
                    <!--Label-->
                    <Border  Background="{Binding Property.CurentBackGround.Main.Section}" CornerRadius="5,5,0,0" Cursor="Hand"  Padding="10">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding Animation.ShowSetersCommand}" CommandParameter="Break"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="{Binding Property.CurentLanguage.Strings[SetterBreak]}" Foreground="{Binding Property.CurentBackGround.Main.Font}" Grid.Column="0" Margin="5,0,0,0" FontSize="20"  HorizontalAlignment="Left"/>
                            <Border x:Name="ImageRotateTimeBreakBorder" Grid.Column="1"  Margin="0,0,15,0" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Border.RenderTransform>
                                <svgc:SvgViewbox   Source="{Binding Property.CurentImageSourse.Sourse[Arrow]}" Width="20" />
                            </Border>
                        </Grid>
                    </Border>
                    <!--Input-->
                    <Border x:Name="TimeBreakMain" Background="{Binding Property.CurentBackGround.Main.Section}"  Height="120" Visibility="Visible" BorderBrush="{Binding Property.CurentBackGround.Accent.Accent}" BorderThickness="0,1,0,0" CornerRadius="0,0,5,5">
                        <Grid  Margin="10,5,5,5"  RenderTransformOrigin="0.5,0.5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0">
                                <TextBlock Text="{Binding Property.CurentLanguage.Strings[SetterBreakInfo]}" Foreground="{Binding Property.CurentBackGround.Main.Font}" />
                                <TextBlock Text="{Binding Timer.TimeBreakInMinutesExeption}" Visibility="{Binding Timer.TimeBreakInMinutesVisibility, Converter={StaticResource BoolToVis}}" Foreground="Red" FontSize="10"/>
                                <TextBox Text="{Binding Timer.TimeBreakInMinutes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding Property.CurentBackGround.Main.Font}" FontSize="16" Width="80" HorizontalAlignment="Left">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border Background="{TemplateBinding Background}" BorderBrush="{Binding Property.CurentBackGround.Accent.Accent}" BorderThickness="2" CornerRadius="5">
                                                <ScrollViewer x:Name="PART_ContentHost" />
                                            </Border>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                    <TextBox.Background>
                                        <SolidColorBrush Color="{Binding Property.CurentBackGround.Main.Section}"/>
                                    </TextBox.Background>
                                </TextBox>
                            </StackPanel>

                            <svgc:SvgViewbox Grid.Row="1"  Source="{Binding Property.CurentImageSourse.Sourse[Break]}" Width="30" HorizontalAlignment="Right" Margin="10"  />
                        </Grid>

                       
                    </Border>
                </StackPanel>

                <!--Seters-->
                <StackPanel Margin="20,5">
                    <StackPanel.Effect>
                        <DropShadowEffect Color="{Binding Property.CurentBackGround.Main.Shadow}" Direction="315" Opacity="0.2" BlurRadius="15" />
                    </StackPanel.Effect>
                    <!--Label-->
                    <Border   Background="{Binding Property.CurentBackGround.Main.Section}"  CornerRadius="5,5,0,0"  Padding="10" Cursor="Hand">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding Animation.ShowSetersCommand}" CommandParameter="Cycle"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="{Binding Property.CurentLanguage.Strings[SetterCycle]}" Foreground="{Binding Property.CurentBackGround.Main.Font}" Grid.Column="0" FontSize="20"   Margin="5,0,0,0"  HorizontalAlignment="Left"/>
                            <Border x:Name="ImageRotateCycleBorder" Grid.Column="1"  Margin="0,0,15,0" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Border.RenderTransform>
                                <svgc:SvgViewbox   Source="{Binding Property.CurentImageSourse.Sourse[Arrow]}" Width="20" />
                            </Border>
                        </Grid>
                    </Border>
                    <!--Input-->
                    <Border x:Name="CycleMain" Background="{Binding Property.CurentBackGround.Main.Section}"  Height="120" Visibility="Visible" BorderBrush="{Binding Property.CurentBackGround.Accent.Accent}"  BorderThickness="0,1,0,0" CornerRadius="0,0,5,5">
                        <Grid  Margin="10,5,5,5"  RenderTransformOrigin="0.5,0.5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <StackPanel Grid.Row="0">
                                <TextBlock Text="{Binding Property.CurentLanguage.Strings[SetterCycleInfo]}"  Foreground="{Binding Property.CurentBackGround.Main.Font}" />
                                <TextBlock Text="{Binding Timer.CountCyclesExeption}" Visibility="{Binding Timer.CountCyclesVisibility, Converter={StaticResource BoolToVis}}" Foreground="Red" FontSize="10"/>
                                <TextBox Text="{Binding Timer.CountCycles, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding Property.CurentBackGround.Main.Font}" FontSize="16" Width="80" HorizontalAlignment="Left">
                                    <TextBox.Template>
                                        <ControlTemplate TargetType="{x:Type TextBox}">
                                            <Border Background="{TemplateBinding Background}" BorderBrush="{Binding Property.CurentBackGround.Accent.Accent}" BorderThickness="2" CornerRadius="5">
                                                <ScrollViewer x:Name="PART_ContentHost" />
                                            </Border>
                                        </ControlTemplate>
                                    </TextBox.Template>
                                    <TextBox.Background>
                                        <SolidColorBrush Color="{Binding Property.CurentBackGround.Main.Section}"/>
                                    </TextBox.Background>
                                </TextBox>
                            </StackPanel>

                            <svgc:SvgViewbox Grid.Row="1"   Source="{Binding Property.CurentImageSourse.Sourse[Cycle]}" Width="30" HorizontalAlignment="Right" Margin="10"  />
                        </Grid>

                        
                    </Border>
                </StackPanel>

                <!--Warning-->
                <TextBlock x:Name="WarningText" Text="{Binding Property.CurentLanguage.Strings[SetterShowaAllSetter]}" Foreground="{Binding Property.CurentBackGround.Main.Font}" HorizontalAlignment="Center" />

                <!--Big Rest-->
                <StackPanel x:Name="LunchContainer" Margin="20,5" >
                    <StackPanel.Effect>
                        <DropShadowEffect Color="{Binding Property.CurentBackGround.Main.Shadow}" Direction="315" Opacity="0.2" BlurRadius="15" />
                    </StackPanel.Effect>
                    <Border  Background="{Binding Property.CurentBackGround.Main.Section}"  CornerRadius="5,5,0,0" Padding="10" Cursor="Hand">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseLeftButtonUp">
                                <i:InvokeCommandAction Command="{Binding Animation.ShowSetersCommand}" CommandParameter="Lunch"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock  Text="{Binding Property.CurentLanguage.Strings[SetterLunch]}" Foreground="{Binding Property.CurentBackGround.Main.Font}" Grid.Column="0" FontSize="20"   Margin="5,0,0,0"  HorizontalAlignment="Left"/>
                            <Border x:Name="ImageRotateLunchBorder" Grid.Column="1"  Margin="0,0,15,0" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <RotateTransform Angle="0"/>
                                </Border.RenderTransform>
                                <svgc:SvgViewbox   Source="{Binding Property.CurentImageSourse.Sourse[Arrow]}" Width="20" ></svgc:SvgViewbox>
                            </Border>
                        </Grid>
                    </Border>
                    <Border  x:Name="LunchMain" Background="{Binding Property.CurentBackGround.Main.Section}" Height="200" Visibility="Visible"  BorderBrush="{Binding Property.CurentBackGround.Accent.Accent}" BorderThickness="0,1,0,0" CornerRadius="0,0,5,5">

                        <Grid  Margin="10,5,5,5"  RenderTransformOrigin="0.5,0.5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <StackPanel  Margin="5"  RenderTransformOrigin="0.5,0.5">
                                <TextBlock Text="{Binding Property.CurentLanguage.Strings[SetterLunchSelect]}" Foreground="{Binding Property.CurentBackGround.Main.Font}" />
                                <ScrollViewer  Style="{StaticResource Win11ScrollViewerStyle}" Height="115">
                                    <ItemsControl ItemsSource="{Binding Timer.Cycles}" >
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>

                                                <Border CornerRadius="5,0,0,5" Margin="0,3" Cursor="Hand">
                                                    <Border.Background>
                                                        <LinearGradientBrush StartPoint="0.1,0.1" EndPoint="1,1">
                                                            <GradientStop Color="{Binding Path=DataContext.Property.CurentBackGround.Accent.Accent, ElementName=myWindow}" Offset="0"/>
                                                            <GradientStop Color="{Binding Path=DataContext.Property.CurentBackGround.Main.Section, ElementName=myWindow}" Offset="0.44"/>
                                                            <GradientStop Color="{Binding Path=DataContext.Property.CurentBackGround.Main.Section, ElementName=myWindow}" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="0.2*"/>
                                                            <ColumnDefinition Width="0.3*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                                <i:InvokeCommandAction Command="{Binding DataContext.Timer.SetBigRest, RelativeSource={RelativeSource AncestorType=ItemsControl}}" CommandParameter="{Binding}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>

                                                        <Border Grid.Column="0" >
                                                            <TextBlock Foreground="{Binding Path=DataContext.Property.CurentBackGround.Accent.Font, ElementName=myWindow}"  Text="{Binding Position}" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        </Border>
                                                        <Border Grid.Column="1" >
                                                            <svgc:SvgViewbox  Width="30" Source="{Binding NameImage}" />
                                                        </Border>
                                                        <Border Grid.Column="2" >
                                                            <TextBlock Text="{Binding IntervalTime}"  Foreground="{Binding Path=DataContext.Property.CurentBackGround.Main.Font, ElementName=myWindow}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                        </Border>

                                                    </Grid>
                                                </Border>
                                               

                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ScrollViewer>

                                <StackPanel x:Name="LunchDrop_Border" Visibility="Collapsed" Cursor="Hand">
                                    <TextBlock Text="{Binding Property.CurentLanguage.Strings[SetterLunchInfo]}" Foreground="{Binding Property.CurentBackGround.Main.Font}"  />
                                    <TextBlock Text="{Binding Timer.TimeBigRestInMinutesExeption}" Visibility="{Binding Timer.TimeBigRestInMinutesVisibility, Converter={StaticResource BoolToVis}}" Foreground="Red" FontSize="10"/>
                                    <TextBox Text="{Binding Timer.TimeBigRestInMinutes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding Property.CurentBackGround.Main.Font}" FontSize="16"  HorizontalAlignment="Left" Width="80">
                                        <TextBox.Template>
                                            <ControlTemplate TargetType="{x:Type TextBox}">
                                                <Border Background="{TemplateBinding Background}" BorderBrush="{Binding Property.CurentBackGround.Accent.Accent}" BorderThickness="2" CornerRadius="5">
                                                    <ScrollViewer x:Name="PART_ContentHost" />
                                                </Border>
                                            </ControlTemplate>
                                        </TextBox.Template>
                                        <TextBox.Background>
                                            <SolidColorBrush Color="{Binding Property.CurentBackGround.Section}"/>
                                        </TextBox.Background>
                                    </TextBox>
                                </StackPanel>
                            </StackPanel>

                            <svgc:SvgViewbox Grid.Row="1"  Source="{Binding Property.CurentImageSourse.Sourse[Lunch]}" Width="30" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10"  />
                        </Grid>

                    </Border>
                </StackPanel>


                <!--Start button-->
                <Border x:Name="StartContainer"  Style="{StaticResource BorderHoverAccent}" CornerRadius="5" Cursor="Hand" Padding="10" Margin="20,5">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Timer.Start}"/>
                            <i:InvokeCommandAction Command="{Binding Window.ChangePageCommand}" CommandParameter="Main" />
                            <i:InvokeCommandAction Command="{Binding Window.StartTimerCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Border.Effect>
                        <DropShadowEffect Color="{Binding Property.CurentBackGround.Main.Shadow}" Direction="315" Opacity="0.2" BlurRadius="15"/>
                    </Border.Effect>

                    <StackPanel>
                        <TextBlock Text="{Binding Property.CurentLanguage.Strings[OtherStart]}" Foreground="{Binding Property.CurentBackGround.Accent.Font}" HorizontalAlignment="Center" FontSize="18"  FontWeight="Bold"/>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                            <TextBlock Text="{Binding Property.CurentLanguage.Strings[OtherTotal]}" Foreground="{Binding Property.CurentBackGround.Accent.Font}"  Margin="5,0"/>
                            <TextBlock Text="{Binding Timer.TotalMinutes}" Foreground="{Binding Property.CurentBackGround.Accent.Font}"  />
                        </StackPanel>
                    </StackPanel>

                </Border>
            </StackPanel>
        </ScrollViewer>
    </Grid>
   
</Page>
