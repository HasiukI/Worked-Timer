<Window x:Class="Worked_Timer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:local="clr-namespace:Worked_Timer.ViewModel"
        mc:Ignorable="d"
        Title="MainWindow" Height="380" Width="360"
        ShowInTaskbar="False"
        WindowStyle="None"
        ResizeMode="NoResize" 
        AllowsTransparency="True" 
        Background="Transparent" 
        Top="{Binding Window.TopPosition}" 
        Left="{Binding Window.LeftPosition}"
        >
    <Window.Resources>

        <BooleanToVisibilityConverter x:Key="BoolToVis" />

        <Style x:Key="BorderHover" TargetType="Border">
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{Binding Property.CurentBackGround.Main.Enter}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

       
        
    </Window.Resources>


    <Border  CornerRadius="20,20,20,20">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="Background" Value="{Binding Property.CurentBackGround.Main.Main}"/>
            </Style>
        </Border.Style>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            
            <!--Icon in system trei-->
            <tb:TaskbarIcon x:Name="MyNotifyIcon" 
                Visibility="Visible"
                LeftClickCommand="{Binding Window.ShowWindowCommand}" 
                 IconSource="pack://application:,,,/images/Icon.ico"> 
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Exit" Command="{Binding Window.CloseWindowCommand}"/>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>

             <!--Main Frame-->
            <Border Grid.Row="0" CornerRadius="10,0,0,0">
                <Frame Content="{Binding Window.CurentPage}" NavigationUIVisibility="Hidden"/>
            </Border>

            <!--Bottom component: Property button-->
            <Border Grid.Row="1" Background="{Binding Property.CurentBackGround.Main.Bottom}" CornerRadius="0,0,20,20">

                <Border  x:Name="button_ShowProperty" HorizontalAlignment="Right" Margin="10" VerticalAlignment="Center" Style="{StaticResource BorderHover}" CornerRadius="10">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseLeftButtonUp">
                            <i:InvokeCommandAction Command="{Binding Window.ChangePageCommand}" CommandParameter="Setting" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <svgc:SvgViewbox   Source="{Binding Property.CurentImageSourse.Sourse[Setting]}" Width="25" Margin="3,3,3,3" />

                </Border>
            </Border>
        </Grid>
    </Border>
    

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Window.WindowLoadedCommand}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Deactivated">
            <i:InvokeCommandAction Command="{Binding Window.HideWindowCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
</Window>
